#+TITLE: XMonad config
#+PROPERTY: header-args :tangle xmonad.hs

* XMonad Config
Just getting started with xmonad. The config is in an org file.
M-x org-babel-tangle -> write to xmonad.hs
C-c C-v t -> write to xmonad.hs

* Useful Links
** [[https://xiangji.me/2018/11/19/my-xmonad-configuration/]]

* IMPORTS

#+BEGIN_SRC haskell
  import XMonad
  import XMonad.Layout.ResizableTile
  import XMonad.Layout.Grid
  import XMonad.Hooks.EwmhDesktops
  import XMonad.Hooks.DynamicLog
  import XMonad.Hooks.ManageDocks
  import XMonad.Util.Run
  import XMonad.Util.EZConfig
  import System.IO
  import XMonad.Actions.CycleWS
  import qualified XMonad.Actions.DynamicWorkspaceOrder as DO
#+END_SRC

* Layout

#+BEGIN_SRC haskell
      myLayout = avoidStruts (tall ||| Mirror tall ||| layoutGrid ||| Full)
        where
          tall = ResizableTall 1 (3/100) (1/2) []
          layoutGrid = Grid

#+END_SRC
    
* Main

#+BEGIN_SRC haskell
    main = do
      xmproc <- spawnPipe "xmobar -x 1"
      xmonad $ docks $ ewmh def
        { modMask = mod4Mask     -- Rebind Mod to the Windows key
        , terminal = "qterminal"
        , layoutHook = myLayout
        , logHook = dynamicLogWithPP xmobarPP
                    { ppOutput = hPutStrLn xmproc
                    , ppTitle = xmobarColor "green" "" . shorten 50
                    }
        , borderWidth = 4
        } `additionalKeys`
        [
          ((mod4Mask .|. shiftMask, xK_h), sendMessage MirrorExpand)
        , ((mod4Mask .|. shiftMask, xK_l), sendMessage MirrorShrink)
        , ((mod4Mask .|. shiftMask, xK_z), spawn "xscreensaver-command -lock")
        , ((0                     , 0x1008ff11), spawn "pactl set-sink-volume @DEFAULT_SINK@ -2%")
        , ((0                     , 0x1008ff13), spawn "pactl set-sink-volume @DEFAULT_SINK@  +2%")
        , ((0                     , 0x1008ff12), spawn "pactl set-sink-mute @DEFAULT_SINK@  toggle")
        , ((mod4Mask , xK_bracketleft), DO.moveTo Prev HiddenNonEmptyWS)
        , ((mod4Mask , xK_bracketright), DO.moveTo Next HiddenNonEmptyWS)
        ]
#+END_SRC
